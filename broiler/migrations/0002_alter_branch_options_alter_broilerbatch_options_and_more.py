# Generated by Django 4.2.6 on 2025-04-03 08:01

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('broiler', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='branch',
            options={'ordering': ['state', 'branch_name'], 'verbose_name': 'Branch', 'verbose_name_plural': 'Branches'},
        ),
        migrations.AlterModelOptions(
            name='broilerbatch',
            options={'ordering': ['-created_at'], 'verbose_name': 'Broiler Batch', 'verbose_name_plural': 'Broiler Batches'},
        ),
        migrations.AlterModelOptions(
            name='broilerdisease',
            options={'ordering': ['-diagnosed_date'], 'verbose_name': 'Broiler Disease', 'verbose_name_plural': 'Broiler Diseases'},
        ),
        migrations.AlterModelOptions(
            name='broilerfarm',
            options={'ordering': ['farm_name'], 'verbose_name': 'Broiler Farm', 'verbose_name_plural': 'Broiler Farms'},
        ),
        migrations.AlterModelOptions(
            name='broilerplace',
            options={'ordering': ['place_name'], 'verbose_name': 'Broiler Place', 'verbose_name_plural': 'Broiler Places'},
        ),
        migrations.AlterModelOptions(
            name='supervisor',
            options={'ordering': ['name'], 'verbose_name': 'Supervisor', 'verbose_name_plural': 'Supervisors'},
        ),
        migrations.AddField(
            model_name='branch',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='branch',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='broilerbatch',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='broilerbatch',
            name='end_date',
            field=models.DateField(blank=True, help_text='Expected end date for the batch', null=True),
        ),
        migrations.AddField(
            model_name='broilerbatch',
            name='start_date',
            field=models.DateField(blank=True, help_text='Date when the batch was started', null=True),
        ),
        migrations.AddField(
            model_name='broilerbatch',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='broilerdisease',
            name='batch',
            field=models.ForeignKey(blank=True, help_text='Batch affected by this disease', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='broiler_diseases', to='broiler.broilerbatch'),
        ),
        migrations.AddField(
            model_name='broilerdisease',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='broilerdisease',
            name='diagnosed_date',
            field=models.DateField(auto_now_add=True, default=django.utils.timezone.now, help_text='Date when the disease was diagnosed'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='broilerdisease',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='broilerfarm',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='broilerfarm',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='broilerplace',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='broilerplace',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='supervisor',
            name='email',
            field=models.EmailField(blank=True, help_text='Email address of the supervisor', max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='supervisor',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='branch',
            name='branch_name',
            field=models.CharField(help_text='Name of the branch', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='branch',
            name='state',
            field=models.CharField(help_text='State where the branch is located', max_length=100),
        ),
        migrations.AlterField(
            model_name='broilerbatch',
            name='batch_name',
            field=models.CharField(help_text='Name or identifier for the batch', max_length=50),
        ),
        migrations.AlterField(
            model_name='broilerbatch',
            name='broiler_farm',
            field=models.ForeignKey(help_text='Farm this batch belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='broiler_batches', to='broiler.broilerfarm'),
        ),
        migrations.AlterField(
            model_name='broilerdisease',
            name='diagnosis',
            field=models.TextField(help_text='Diagnosis and treatment details'),
        ),
        migrations.AlterField(
            model_name='broilerdisease',
            name='disease_code',
            field=models.CharField(help_text='Code or identifier for the disease', max_length=50),
        ),
        migrations.AlterField(
            model_name='broilerdisease',
            name='disease_name',
            field=models.CharField(help_text='Name of the disease', max_length=100),
        ),
        migrations.AlterField(
            model_name='broilerdisease',
            name='image',
            field=models.ImageField(blank=True, help_text='Image related to the disease', null=True, upload_to='disease_images/'),
        ),
        migrations.AlterField(
            model_name='broilerdisease',
            name='symptoms',
            field=models.TextField(help_text='Symptoms observed'),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='address',
            field=models.TextField(help_text='Detailed address of the farm'),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='block_name',
            field=models.CharField(help_text='Block or area name within the place', max_length=100),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='branch',
            field=models.ForeignKey(help_text='Branch this farm belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='broiler_farms', to='broiler.branch'),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='broiler_place',
            field=models.ForeignKey(help_text='Place where this farm is located', on_delete=django.db.models.deletion.CASCADE, related_name='broiler_farms', to='broiler.broilerplace'),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='farm_code',
            field=models.CharField(help_text='Unique code for the farm', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='farm_latitude',
            field=models.FloatField(help_text='Latitude coordinate of the farm', validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)]),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='farm_longitude',
            field=models.FloatField(help_text='Longitude coordinate of the farm', validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)]),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='farm_name',
            field=models.CharField(help_text='Name of the farm', max_length=100),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='farm_type',
            field=models.CharField(choices=[('commercial', 'Commercial'), ('contract', 'Contract'), ('own', 'Own')], default='commercial', help_text='Type of farm operation', max_length=50),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='mobile_no',
            field=models.CharField(help_text='Contact number for the farm', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AlterField(
            model_name='broilerfarm',
            name='supervisor',
            field=models.ForeignKey(help_text='Supervisor managing this farm', on_delete=django.db.models.deletion.CASCADE, related_name='broiler_farms', to='broiler.supervisor'),
        ),
        migrations.AlterField(
            model_name='broilerplace',
            name='place_name',
            field=models.CharField(help_text='Name of the place', max_length=100),
        ),
        migrations.AlterField(
            model_name='broilerplace',
            name='supervisor',
            field=models.ForeignKey(help_text='Supervisor managing this place', on_delete=django.db.models.deletion.CASCADE, related_name='broiler_places', to='broiler.supervisor'),
        ),
        migrations.AlterField(
            model_name='supervisor',
            name='address',
            field=models.TextField(help_text='Residential address of the supervisor'),
        ),
        migrations.AlterField(
            model_name='supervisor',
            name='branch',
            field=models.ForeignKey(help_text='Branch this supervisor belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='supervisors', to='broiler.branch'),
        ),
        migrations.AlterField(
            model_name='supervisor',
            name='name',
            field=models.CharField(help_text='Full name of the supervisor', max_length=100),
        ),
        migrations.AlterField(
            model_name='supervisor',
            name='phone_no',
            field=models.CharField(help_text='Contact number of the supervisor', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AlterUniqueTogether(
            name='broilerbatch',
            unique_together={('broiler_farm', 'batch_name')},
        ),
        migrations.AlterUniqueTogether(
            name='broilerfarm',
            unique_together={('farm_code', 'branch')},
        ),
        migrations.AlterUniqueTogether(
            name='broilerplace',
            unique_together={('supervisor', 'place_name')},
        ),
    ]
